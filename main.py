import telebot
import requests
import numpy as np
import time
import socket
import ssl
import datetime
import csv

# in TELEGRAM - https://t.me/check_response_bot

bot = telebot.TeleBot("5521564357:AAEyEl6zrML9PGMY-vunQesbEU0d4ZWdw1Y", parse_mode=None)
# to run script when u close ssh session - use tmux on linux terminal
# https://askubuntu.com/questions/8653/how-to-keep-processes-running-after-ending-ssh-session
# in TELEGRAM - https://t.me/nazk_up_bot
sitepack = []
sitepack_plus = []
WhileLoopFlag = True
ssl_warning = 0
sitepack_nazk = ['https://interes.shtab.net/',
                 'https://sanctions.nazk.gov.ua/',
                 'https://vision.nazk.gov.ua/',
                 'https://prosvita.nazk.gov.ua/',
                 'https://antycorportal.nazk.gov.ua/',
                 'https://study.nazk.gov.ua/',
                 'https://wiki.nazk.gov.ua/',
                 'https://nazk.gov.ua/uk/',
                 'https://erp.nazk.gov.ua/',
                 'https://jira.nazk.gov.ua/',
                 'https://confluence.nazk.gov.ua/',
                 'https://cloud.nazk.gov.ua',
                 'https://mail.nazk.gov.ua/mail/?_task=mail&_mbox=INBOX',
                 'https://nacpworkspace.slack.com/']

"""
start - (—Å—Ç–∞—Ä—Ç/—Å—Ç–æ–ø) –∑—É–ø–∏–Ω–∏, –ø–µ—Ä–µ–¥ —Ç–∏–º, —è–∫ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –Ω–æ–≤–∏–π —Ñ–∞–π–ª.
help - –≤–∏–º–æ–≥–∏ –¥–æ —Ñ–∞–π–ª—É, —Ç–∞ –ø—ñ–¥—Å–∫–∞–∑–∫–∏.
clean - –æ—á–∏—â–µ–Ω–Ω—è —Ä–∞–Ω-—Ç–∞–π–º —Å–ø–∏—Å–∫—É.
check_message_urls - –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Ä–∞–Ω-—Ç–∞–π–º —Å–ø–∏—Å–æ–∫.
up_nazk - –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Ä–µ—Å—É—Ä–∫–∏ –ù–ê–ó–ö. —Ç–∞–π–º–∞—É—Ç - 1—Ö–≤
nazk_stop - –∑—É–ø–∏–Ω–∏—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Ä–µ—Å—É—Ä—Å—ñ–≤ –ù–ê–ó–ö.
"""


def time_func():
    return (datetime.datetime.now()).strftime("%d:%m:%y %H:%M:%S")


with open('logout.csv', 'a+', newline='', encoding='utf-8') as csvfile:
    fieldnames = ['–ù–∞–∑–≤–∞ –æ–ø–µ—Ä–∞—Ü—ñ—ó', '–†–µ–∑—É–ª—å—Ç–∞—Ç', '–ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è: –î–î/–ú–ú/–†–† –ì–æ–¥/–•–≤/–°–µ–∫']
    logger = csv.DictWriter(csvfile, fieldnames=fieldnames)
    logger.writeheader()
    logger.writerow({'–ù–∞–∑–≤–∞ –æ–ø–µ—Ä–∞—Ü—ñ—ó': "–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞", '–†–µ–∑—É–ª—å—Ç–∞—Ç': " LOADED",
                     '–ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è: –î–î/–ú–ú/–†–† –ì–æ–¥/–•–≤/–°–µ–∫': time_func()})


@bot.message_handler(commands=['start'])
def send_welcome(message):
    global sitepack
    global WhileLoopFlag
    sitepack = []
    bot.reply_to(message, "–ü—Ä–∏–≤—ñ—Ç, —Ç—É—Ç —î —Ç—Ä–∏ —Ä–µ–∂–∏–º–∏ —è–∫ –ø—Ä–∞—Ü—é—î —Ü–µ–π –±–æ—Ç:\n\n"
                          "1)–°–∫–∏–Ω—å —Ñ–∞–π–ª, —â–æ –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è 'urls.txt', –≤ —è–∫–æ–º—É —î —Å–ø–∏—Å–æ–∫ –ø–æ—Å–∏–ª–∞–Ω—å(–±—ñ–ª—å—à–µ 1 –ø–æ—Å–∏–ª–∞–Ω–Ω—è) "
                          "—Ä–æ–∑–¥—ñ–ª–µ–Ω–∏—Ö –º—ñ–∂ —Å–æ–±–æ—é –ø–µ—Ä–µ–Ω–æ—Å–æ–º —Å—Ç—Ä–æ–∫–∏(–µ–Ω—Ç–µ—Ä –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—ñ) —ñ –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –±—É–¥–µ "
                          "–ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ –≤—Å—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è. \n–©–æ–± –∑—É–ø–∏–Ω–∏—Ç–∏ –±–æ—Ç–∞ - –ø—Ä–æ–ø–∏—à–∏: "
                          " /start.\n\n"
                          "–•–æ—á–µ—à —Å–∫–∏–Ω—É—Ç–∏ –Ω–æ–≤–∏–π —Å–ø–∏—Å–æ–∫ –≤ —Ñ–∞–π–ª—ñ? –°–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–ø–∏—à–∏ /start"
                          "\n"
                          "\n"
                          "2)–ö–∏–¥–∞–π –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ —á–∞—Ç, –±–æ—Ç –±—É–¥–µ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ —ó—Ö –≤ —Å–ø–∏—Å–æ–∫ (–¥—É–±–ª—ñ–∫–∞—Ç–∏ —ñ–≥–Ω–æ—Ä—É—é—Ç—å—Å—è) —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤ "
                          "+ –≤ —á–∞—Ç, —â–æ–± –ø–æ—á–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Ü—å–æ–≥–æ (–æ–∫—Ä–µ–º–æ–≥–æ)—Å–ø–∏—Å–∫—É. –©–æ–± –æ–±–Ω—É–ª–∏—Ç–∏ —Å–ø–∏—Å–æ–∫ - –ø—Ä–æ–ø–∏—à–∏ "
                          "–∫–æ–º–∞–Ω–¥—É /clean \n\n"
                          "–†–µ–∂–∏–º–∏ –Ω–µ–∑–∞–ª–µ–∂–Ω—ñ –æ–¥–∏–Ω –≤—ñ–¥ –æ–¥–Ω–æ–≥–æ —Ç–∞ –º–æ–∂—É—Ç—å –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ.\n\n"
                          "!!!–í–∏–º–æ–≥–∏ –¥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ - /help !!!"
                          "\n"
                          "\n"
                            "3) –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–∏—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤ –ù–ê–ó–ö. –ü–æ—á–∞—Ç–∏ - /up_nazk . –ó—É–ø–∏–Ω–∏—Ç–∏ -  /nazk_stop")

    WhileLoopFlag = False
    logger_writer(first_par="send_welcome(message):–ó–∞–ø—É—Å–∫ —á–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞(–Ω–µ —Å–∫—Ä–∏–ø—Ç–∞)", sec_par=" LOADED")


@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id,
                     "–í–∏–º–æ–≥–∏ –¥–æ —Ñ–∞–π–ª—É \"urls.txt\":\n"
                     "1) –ë—ñ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ñ–∞–π–ª—ñ.\n"
                     "2) –ü–æ—Å–∏–ª–∞–Ω–Ω—è –ø–æ—á–∏–Ω–∞—é—Ç—å—Å—è –∑ http –∞–±–æ https, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ SSL - —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç\n"
                     "3) –ü–æ—Å–∏–ª–∞–Ω–Ω—è —Ä–æ–∑–¥—ñ–ª–µ–Ω—è –º—ñ–∂ —Å–æ–±–æ—é –ø–µ—Ä–µ–Ω–æ—Å–æ–º —Å—Ç—Ä–æ–∫–∏ (Enter)\n"
                     "4) –ù–∞–∑–≤–∞ - –æ–±–æ–≤'—è–∑–∫–æ–≤–æ \"urls.txt\"\n"
                     "5) –©–æ–± –ø–æ—á–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª—É - –ø–æ—Ç—Ä—ñ–±–Ω–æ —Å–ø–æ—á–∞—Ç–∫—É –∑—É–ø–∏–Ω–∏—Ç–∏ –±–æ—Ç–∞ /start ,"
                     "–∞ –ø–æ—Ç—ñ–º –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –Ω–æ–≤–∏–π —Ñ–∞–π–ª \"urls.txt\" ")


def logger_writer(first_par, sec_par):
    with open('logout.csv', 'a+', newline='', encoding='utf-8') as csvfile:
        fieldnames = ['–ù–∞–∑–≤–∞ –æ–ø–µ—Ä–∞—Ü—ñ—ó', '–†–µ–∑—É–ª—å—Ç–∞—Ç', '–ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è: –î–î/–ú–ú/–†–† –ì–æ–¥/–•–≤/–°–µ–∫']
        logger = csv.DictWriter(csvfile, fieldnames=fieldnames)
        logger.writerow({'–ù–∞–∑–≤–∞ –æ–ø–µ—Ä–∞—Ü—ñ—ó': first_par, '–†–µ–∑—É–ª—å—Ç–∞—Ç': sec_par,
                         '–ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è: –î–î/–ú–ú/–†–† –ì–æ–¥/–•–≤/–°–µ–∫': time_func()})


@bot.message_handler(commands=['clean'])
def clean(message):
    global sitepack_plus
    sitepack_plus = []
    print(sitepack_plus)
    bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –∑–∞–ø–∞–º'—è—Ç–æ–≤–∞–Ω–∏—Ö —É—Ä–ª—ñ–≤ - –æ—á–∏—â–µ–Ω–æ")
    logger_writer(first_par="–û—á–∏—â–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –∑–∞–ø–∞–º'—è—Ç–æ–≤–∞–Ω–∏—Ö –∞–¥—Ä–µ—Å", sec_par=" LOADED  ")


@bot.message_handler(content_types=['document'])
def downloader(message):
    global sitepack
    global WhileLoopFlag
    global logger
    file_name = message.document.file_name
    file_info = bot.get_file(message.document.file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    with open(file_name, 'wb') as new_file:
        new_file.write(downloaded_file)
        new_file.close()
    sitepack = np.loadtxt("urls.txt", dtype="str")
    print(sitepack)
    print(sitepack.size)
    WhileLoopFlag = True
    while WhileLoopFlag is True:
        loaded = 0
        failed = 0

        try:
            for x in sitepack:
                hostname = x.split("/")
                hostname = hostname[2]
                print(hostname)
                try:
                    #timeout was - none
                    requests.get(x, timeout=1)
                    loaded += 1
                    print("send to ssl_check")
                    result_check = ssl_check(x)
                    result_check_days = str(result_check)
                    ssl_alarm_check(message, hostname)
                    logger_writer(first_par='–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑ ' + file_name, sec_par=result_check_days + " LOADED  ")
                    print('response from ssl_check')
                except OSError:
                    bot.send_message(message.chat.id, hostname + '  - üõëFAILUREüõë')
                    logger_writer(first_par='–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑ ' + file_name, sec_par=hostname + '  - FAILURE')
                    failed += 1
            # bot.send_message(message.chat.id, str(loaded) + "/" + str(loaded + failed) + " - LOADED ")
            logger_writer(first_par='–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑ ' + file_name,
                          sec_par=str(loaded) + "/" + str(loaded + failed) + " - LOADED ")
        except TypeError:
            bot.send_message(message.chat.id,
                             "–í —Ñ–∞–π–ª—ñ –ª–∏—à–µ –æ–¥–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏(–∫–æ–º–∞–Ω–¥–∞ /start) –±–æ—Ç —Ç–∞ –ø—Ä–æ—Å—Ç–æ —Å–∫–∏–Ω—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è "
                             "–≤ —á–∞—Ç —ñ –Ω–∞—Ç–∏—Å–Ω–∏ + \n TypeError exeption –≤ –º–µ—Ç–æ–¥—ñ downloader() ")
            logger_writer(first_par='–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑ ' + file_name,
                          sec_par="ERROR: –í —Ñ–∞–π–ª—ñ –ª–∏—à–µ –æ–¥–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∞–±–æ –ø–æ–º–∏–ª–∫–∞ –∑—á–∏—Ç—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É")
        time.sleep(90)


@bot.message_handler(commands=['check_message_urls'])
def check_message_urls(message):
    global sitepack_plus
    loaded = 0
    failed = 0
    # if message.text == "+" and sitepack_plus is not None:

    for x in sitepack_plus:

        try:
            # timeout was - none
            requests.get(x, timeout=1)
            loaded += 1
            result_check = ssl_check(x)
            bot.send_message(message.chat.id, result_check)
            logger_writer(first_par='–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑ —Å–ø–∏—Å–∫—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö –≤ —á–∞—Ç—ñ –ø–æ—Å–∏–ª–∞–Ω—å.',
                          sec_par=result_check + " - LOADED")

        except OSError:
            hostname = x.split("/")
            hostname = hostname[2]
            bot.send_message(message.chat.id, hostname + "  - üõëFAILUREüõë")
            logger_writer(first_par='–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑ —Å–ø–∏—Å–∫—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö –≤ —á–∞—Ç—ñ –ø–æ—Å–∏–ª–∞–Ω—å.',
                          sec_par=hostname + " - FAILURE")
            failed += 1
    bot.send_message(message.chat.id, str(loaded) + "/" + str(loaded + failed) + " - LOADED")
    logger_writer(first_par='–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑ —Å–ø–∏—Å–∫—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö –≤ —á–∞—Ç—ñ –ø–æ—Å–∏–ª–∞–Ω—å.',
                  sec_par=str(loaded) + "/" + str(loaded + failed) + " - LOADED ")


def ssl_check(hostname):
    global ssl_warning
    if hostname.startswith("https"):
        print("%s" % hostname)
        hostname = hostname.split("/")
        hostname = hostname[2]
        # https://www.w3schools.com/python/python_datetime.asp
        ssl_date_fmt = r'%b %d %H:%M:%S %Y %Z'
        context = ssl.create_default_context()
        # to wrap a socket.
        conn = context.wrap_socket(socket.socket(socket.AF_INET), server_hostname=hostname, )
        #TIMEOUT WAS 3.0
        conn.settimeout(1.0)
        conn.connect((hostname, 443))
        ssl_info = conn.getpeercert()
        Exp_ON = datetime.datetime.strptime(ssl_info['notAfter'], ssl_date_fmt)
        Days_Remaining = Exp_ON - datetime.datetime.utcnow()
        x = (hostname + " –î–æ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç—É: " + (str(Days_Remaining).split(" ")[0]) + " –¥–Ω—ñ–≤.")
        print(x)

        conn.close()
        ssl_warning = int(((str(Days_Remaining)).split(" "))[0])
        print(ssl_warning)

        return x
    else:
        hostname = hostname.split("/")
        hostname = hostname[2] + " - –Ω–µ —î —Å–∞–π—Ç–æ–º, —â–æ –º—ñ—Å—Ç–∏—Ç—å ssl —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç."
        return hostname


# –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Å–ª –¥–∞—Ç–∞ –µ–∫—Å–ø–∞–π—Ä, —è–∫—à–æ –º–µ–Ω—à–µ 10–¥–Ω—ñ–≤ - —Ç–æ –∞–ª–∞—Ä–º–∏–º –≤ —á–∞—Ç
def ssl_alarm_check(message, hostname):
    global ssl_warning
    if ssl_warning < 10:
        bot.send_message(message.chat.id,
                         hostname + " --- –£–í–ê–ì–ê, –¥–æ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è SSL - —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç—É: " + str(ssl_warning) + " –¥–Ω—ñ–≤!!!!")
        logger_writer(first_par="–£–í–ê–ì–ê!  ",
                      sec_par=hostname + " ---- –¥–æ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è SSL - —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç—É: " + str(ssl_warning) + " –¥–Ω—ñ–≤")


@bot.message_handler(commands=['up_nazk'])
def up_nazk(message):
    global sitepack_nazk
    global WhileLoopFlag_nazk
    WhileLoopFlag_nazk = True
    while WhileLoopFlag_nazk is True:
        loaded = sitepack_nazk.__len__()
        dict = []
        try:
            for x in sitepack_nazk:
                hostname = x.split("/")
                hostname = hostname[2]

                try:
                    #TIMEOUT WAS - NONE
                    requests.get(x, timeout=1)
                    print(requests.get(x))
                    result_check = ssl_check_nazk(x)
                    result_check_days = str(result_check)
                    # bot.send_message(message.chat.id, ' üü¢LOADüü¢ \n ' + result_check_days)
                    dict.append(result_check_days + 'üü¢LOADüü¢')
                except OSError:
                    # bot.send_message(message.chat.id, hostname + '  - üõëFAILüõë')
                    dict.append(hostname + ' - üõëFAILüõë')
                    loaded -= 1
            str_result = ''
            for all in dict:
                str_result += str(all) + '\n'
            str_result += str(loaded) + "/" + str(sitepack_nazk.__len__()) + " - LOADED "
            bot.send_message(message.chat.id, str_result)
            logger_writer(first_par="–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å—ñ–≤ –ù–ê–ó–ö:   ",
                          sec_par=str_result)

            # bot.send_message(message.chat.id, str(loaded) + "/" + str(sitepack_nazk.__len__()) + " - LOADED ")
            if loaded == 0:
                bot.send_message(message.chat.id, "Check bot serverside connection or all urls are failed")
            print(sitepack_nazk.__len__())

        except TypeError:
            bot.send_message(message.chat.id,
                             "TypeError exeption –≤ –º–µ—Ç–æ–¥—ñ up_nazk(), ")
        time.sleep(60)


def ssl_check_nazk(hostname):
    try:
        if hostname.startswith("https"):
            hostname = hostname.split("/")
            hostname = hostname[2]
            ssl_date_fmt = r'%b %d %H:%M:%S %Y %Z'
            context = ssl.create_default_context()
            conn = context.wrap_socket(socket.socket(socket.AF_INET), server_hostname=hostname, )
            #TIMEOUT WAS 3.0
            conn.settimeout(1.0)
            conn.connect((hostname, 443))
            ssl_info = conn.getpeercert()
            Exp_ON = datetime.datetime.strptime(ssl_info['notAfter'], ssl_date_fmt)
            Days_Remaining = Exp_ON - datetime.datetime.utcnow()
            x = (hostname + " –î–æ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è SSL: " + (str(Days_Remaining).split(" ")[0]) + " –¥–Ω—ñ–≤.")
            print(x)
            conn.close()
            return x
        else:
            hostname = hostname.split("/")
            hostname = hostname[2] + " - –Ω–µ —î —Å–∞–π—Ç–æ–º, —â–æ –º—ñ—Å—Ç–∏—Ç—å ssl —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç, –∞–±–æ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –Ω–µ –∑ 'https'"
            return hostname
    except Exception:
        x = str(hostname) + ' –Ω–µ –≤–¥–∞—î—Ç—å—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ SSL.'
        return x


@bot.message_handler(commands=['nazk_stop'])
def nazk_stop(message):
    global WhileLoopFlag_nazk
    WhileLoopFlag_nazk = False
    bot.send_message(message.chat.id, '–†–æ–±–æ—Ç—É –±–æ—Ç–∞ –ø–æ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ —Ä–µ—Å—É—Ä—Å—ñ–≤ –ù–ê–ó–ö –∑—É–ø–∏–Ω–µ–Ω–æ')
    logger_writer(first_par="–ó—É–ø–∏–Ω–µ–Ω–Ω—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–µ—Å—É—Ä—Å—ñ–≤ –ù–ê–ó–ö    ",
                  sec_par='–†–æ–±–æ—Ç—É –±–æ—Ç–∞ –ø–æ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ —Ä–µ—Å—É—Ä—Å—ñ–≤ –ù–ê–ó–ö –∑—É–ø–∏–Ω–µ–Ω–æ')


@bot.message_handler(content_types=['text'])
def add_to_sitepack(message):
    global sitepack_plus
    if message.text.startswith("http") and message.text not in sitepack_plus:
        sitepack_plus.append(message.text)
        logger_writer(first_par='–í –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–æ–¥–∞–Ω–æ: ',
                      sec_par=message.text)
        print("–ó–±–µ—Ä–µ–∂–µ–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:" + str(sitepack_plus))
    try:
        sitepack_plus[0]
    except IndexError:
        bot.send_message(message.chat.id, "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –º—ñ—Å—Ç–∏—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç")
        logger_writer(first_par='–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑ —Å–ø–∏—Å–∫—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö –≤ —á–∞—Ç—ñ –ø–æ—Å–∏–ª–∞–Ω—å.',
                      sec_par=message.text + "  -  –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –º—ñ—Å—Ç–∏—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç")


while True:
    try:
        bot.polling(non_stop=True, interval=0)
    except Exception as e:
        print(e)
        logger_writer(first_par=e, sec_par="     –ü–û–ú–ò–õ–ö–ê –ü–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø")
        time.sleep(5)
        continue
